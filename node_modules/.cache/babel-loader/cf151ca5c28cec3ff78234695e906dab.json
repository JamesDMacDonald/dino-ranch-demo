{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/main/Documents/dino-ranch-landing/src/app/views/components/header.js\";\nimport React, { Component } from 'react';\nimport logo from '../../../assets/hatch_01_DR_Prop_DinoEgg_0001.png';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      releaseDate: 'March 20 2021 00:00:00',\n      remaningTime: {\n        days: '00',\n        hours: '00',\n        minutes: '00',\n        seconds: '00'\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.calcTimeRemaining();\n    window.addEventListener('scroll', this.onScroll);\n  }\n\n  calcTimeRemaining() {\n    // ? get the global time from an api, compare that to the release date, display the countdown and change the image to the one representing how close to the date it is.\n    const total = Date.parse(this.state.releaseDate) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60) >= 10 ? Math.floor(total / 1000 % 60) : `0${Math.floor(total / 1000 % 60)}`;\n    const minutes = Math.floor(total / 1000 / 60 % 60) >= 10 ? Math.floor(total / 1000 / 60 % 60) : `0${Math.floor(total / 1000 / 60 % 60)}`;\n    const hours = Math.floor(total / (1000 * 60 * 60) % 24) >= 10 ? Math.floor(total / (1000 * 60 * 60) % 24) : `0${Math.floor(total / (1000 * 60 * 60) % 24)}`;\n    const days = Math.floor(total / (1000 * 60 * 60 * 24)) >= 10 ? Math.floor(total / (1000 * 60 * 60 * 24)) : `0${Math.floor(total / (1000 * 60 * 60 * 24))}`;\n    this.setState({\n      remaningTime: {\n        days,\n        hours,\n        minutes,\n        seconds\n      }\n    }); // ? set a timer to rerun this function every second to update the time value\n\n    setTimeout(() => {\n      this.calcTimeRemaining();\n    }, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dino-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-value days\",\n          children: this.state.remaningTime.days\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-value hours\",\n          children: this.state.remaningTime.hours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-value minutes\",\n          children: [\" \", this.state.remaningTime.minutes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-value seconds\",\n          children: [\" \", this.state.remaningTime.seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/main/Documents/dino-ranch-landing/src/app/views/components/header.js"],"names":["React","Component","logo","Header","constructor","props","state","releaseDate","remaningTime","days","hours","minutes","seconds","componentDidMount","calcTimeRemaining","window","addEventListener","onScroll","total","Date","parse","Math","floor","setState","setTimeout","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mDAAjB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,wBADF;AAEXC,MAAAA,YAAY,EAAG;AACbC,QAAAA,IAAI,EAAE,IADO;AAEbC,QAAAA,KAAK,EAAE,IAFM;AAGbC,QAAAA,OAAO,EAAE,IAHI;AAIbC,QAAAA,OAAO,EAAE;AAJI;AAFJ,KAAb;AASD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,iBAAL;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,QAAvC;AACD;;AACDH,EAAAA,iBAAiB,GAAE;AACjB;AAEA,UAAMI,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKd,KAAL,CAAWC,WAAtB,IAAqCY,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAAnD;AACA,UAAMP,OAAO,GAAGS,IAAI,CAACC,KAAL,CAAYJ,KAAK,GAAG,IAAT,GAAiB,EAA5B,KAAmC,EAAnC,GAAwCG,IAAI,CAACC,KAAL,CAAYJ,KAAK,GAAG,IAAT,GAAiB,EAA5B,CAAxC,GAA2E,IAAGG,IAAI,CAACC,KAAL,CAAYJ,KAAK,GAAG,IAAT,GAAiB,EAA5B,CAAgC,EAA9H;AACA,UAAMP,OAAO,GAAGU,IAAI,CAACC,KAAL,CAAYJ,KAAK,GAAG,IAAR,GAAe,EAAhB,GAAsB,EAAjC,KAAwC,EAAxC,GAA6CG,IAAI,CAACC,KAAL,CAAYJ,KAAK,GAAG,IAAR,GAAe,EAAhB,GAAsB,EAAjC,CAA7C,GAAqF,IAAGG,IAAI,CAACC,KAAL,CAAYJ,KAAK,GAAG,IAAR,GAAe,EAAhB,GAAsB,EAAjC,CAAqC,EAA7I;AACA,UAAMR,KAAK,GAAGW,IAAI,CAACC,KAAL,CAAYJ,KAAK,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAN,GAA6B,EAAxC,KAA+C,EAA/C,GAAmDG,IAAI,CAACC,KAAL,CAAYJ,KAAK,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAN,GAA6B,EAAxC,CAAnD,GAAkG,IAAGG,IAAI,CAACC,KAAL,CAAYJ,KAAK,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAN,GAA6B,EAAxC,CAA4C,EAA/J;AACA,UAAMT,IAAI,GAAGY,IAAI,CAACC,KAAL,CAAWJ,KAAK,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAhB,KAA6C,EAA7C,GAAkDG,IAAI,CAACC,KAAL,CAAWJ,KAAK,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAhB,CAAlD,GAA+F,IAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAK,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAhB,CAA0C,EAAzJ;AAEA,SAAKK,QAAL,CAAc;AACZf,MAAAA,YAAY,EAAE;AACZC,QAAAA,IADY;AAEZC,QAAAA,KAFY;AAGZC,QAAAA,OAHY;AAIZC,QAAAA;AAJY;AADF,KAAd,EATiB,CAejB;;AACAY,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKV,iBAAL;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AACDW,EAAAA,MAAM,GAAE;AAEN,wBACE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCAEE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmC,KAAKnB,KAAL,CAAWE,YAAX,CAAwBC;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,oBAAoC,KAAKH,KAAL,CAAWE,YAAX,CAAwBE;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAJF,eAME;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA,0BAAuC,KAAKJ,KAAL,CAAWE,YAAX,CAAwBG,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAQE;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA,0BAAuC,KAAKL,KAAL,CAAWE,YAAX,CAAwBI,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAK,QAAA,GAAG,EAAEV,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAvD4B;;AAyD/B,eAAeC,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport logo from '../../../assets/hatch_01_DR_Prop_DinoEgg_0001.png'\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      releaseDate: 'March 20 2021 00:00:00',\n      remaningTime : {\n        days: '00',\n        hours: '00',\n        minutes: '00',\n        seconds: '00'\n      }\n    }\n  }\n  componentDidMount(){\n    this.calcTimeRemaining();\n    window.addEventListener('scroll', this.onScroll)\n  }\n  calcTimeRemaining(){\n    // ? get the global time from an api, compare that to the release date, display the countdown and change the image to the one representing how close to the date it is.\n\n    const total = Date.parse(this.state.releaseDate) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60) >= 10 ? Math.floor((total / 1000) % 60) : `0${Math.floor((total / 1000) % 60)}`;\n    const minutes = Math.floor((total / 1000 / 60) % 60) >= 10 ? Math.floor((total / 1000 / 60) % 60) : `0${Math.floor((total / 1000 / 60) % 60)}` ;\n    const hours = Math.floor((total / (1000 * 60 * 60)) % 24) >= 10? Math.floor((total / (1000 * 60 * 60)) % 24) : `0${Math.floor((total / (1000 * 60 * 60)) % 24)}`;\n    const days = Math.floor(total / (1000 * 60 * 60 * 24)) >= 10 ? Math.floor(total / (1000 * 60 * 60 * 24)) : `0${Math.floor(total / (1000 * 60 * 60 * 24))}` ;\n\n    this.setState({\n      remaningTime: {\n        days,\n        hours,\n        minutes,\n        seconds}})\n    // ? set a timer to rerun this function every second to update the time value\n    setTimeout(() => {\n      this.calcTimeRemaining();\n    }, 1000);\n  }\n  render(){\n    \n    return(\n      <header className=\"dino-header\">\n        <div className=\"countdown-timer\">   \n          {/* <span className=\"time-type\">Days: </span> */}\n          <span className=\"time-value days\">{this.state.remaningTime.days}</span>\n          {/* <span className=\"time-type\">Hours: </span> */}\n          <span className=\"time-value hours\">{this.state.remaningTime.hours}</span>\n          {/* <span className=\"time-type\">Minutes: </span> */}\n          <span className=\"time-value minutes\"> {this.state.remaningTime.minutes}</span>\n          {/* <span className=\"time-type\">Seconds: </span> */}\n          <span className=\"time-value seconds\"> {this.state.remaningTime.seconds}</span>\n        </div>\n\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    )\n  }\n}\nexport default Header"]},"metadata":{},"sourceType":"module"}